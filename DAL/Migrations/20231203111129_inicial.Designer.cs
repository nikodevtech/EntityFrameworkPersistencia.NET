// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231203111129_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entidades.DAO.Evaluacion", b =>
                {
                    b.Property<string>("codEvaluacion")
                        .HasColumnType("text")
                        .HasColumnName("cod_evaluacion");

                    b.Property<string>("descripcionEval")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("desc_evaluacion");

                    b.HasKey("codEvaluacion");

                    b.ToTable("eva_cat_evaluacion", "sc_evaluacion");
                });

            modelBuilder.Entity("DAL.Entidades.DAO.Nota", b =>
                {
                    b.Property<int>("idNotaEval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_nota_evaluacion");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("idNotaEval"));

                    b.Property<string>("codAlumno")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cod_alumno");

                    b.Property<string>("codEvaluacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cod_evaluacion");

                    b.Property<DateTime?>("mdFch")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("md_fch");

                    b.Property<string>("mdUuid")
                        .HasColumnType("text")
                        .HasColumnName("md_uuid");

                    b.Property<int>("notaEval")
                        .HasColumnType("integer")
                        .HasColumnName("nota_evaluacion");

                    b.HasKey("idNotaEval");

                    b.HasIndex("codEvaluacion");

                    b.ToTable("eva_tch_notas_evaluacion", "sc_evaluacion");
                });

            modelBuilder.Entity("DAL.Entidades.DAO.Nota", b =>
                {
                    b.HasOne("DAL.Entidades.DAO.Evaluacion", "evaluacion")
                        .WithMany("listaNotas")
                        .HasForeignKey("codEvaluacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evaluacion");
                });

            modelBuilder.Entity("DAL.Entidades.DAO.Evaluacion", b =>
                {
                    b.Navigation("listaNotas");
                });
#pragma warning restore 612, 618
        }
    }
}
